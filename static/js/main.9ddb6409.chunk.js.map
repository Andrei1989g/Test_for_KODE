{"version":3,"sources":["components/OTPForm.tsx","components/Header.tsx","components/Routes/SelectElement.tsx","components/Select.tsx","components/Pagination.tsx","components/MainPage.tsx","components/AuthorizationForm.tsx","components/PresentationalForm.tsx","components/Routes/Routes.tsx","App.tsx","reportWebVitals.ts","index.tsx","App.module.css"],"names":["OTPForm","useState","code","setCode","isClick","setIsClick","error","setError","console","log","to","className","style","firstPage","input","TextField","onChange","e","currentTarget","value","id","helperText","label","variant","Button","onClick","endIcon","Header","isBack","history","useHistory","AppBar","position","Toolbar","push","color","Typography","component","sx","flexGrow","SelectElement","props","FormControl","m","minWidth","InputLabel","Select","labelId","callback","MenuItem","types","map","el","SelectForm","React","setTypes","subTypes","setSubTypes","instance","axios","create","baseURL","headers","useEffect","get","currentType","currentSubType","currentPage","then","res","setNewPokemonData","data","setTotalItemsCount","totalCount","setPageSize","pageSize","catch","err","select","event","setCurrentType","target","localStorage","setItem","JSON","stringify","setCurrentSubType","PaginationPage","pagesCount","Math","ceil","totalItemsCount","pagination","Pagination","setCurrentPage","page","count","shape","MainPage","mainPage","newPokemonData","viewer","viewItem","navLink","pathname","src","images","small","img","alt","name","artist","AuthorizationForm","login","setLogin","password","setPassword","PresentationalForm","setData","params","useParams","viewField","window","large","largeImg","personalData","supertype","subtypes","attacks","damage","cost","weaknesses","type","hp","abilities","description","text","Routes","getItem","valueType","parse","subValueType","currentPageValue","exact","path","App","main","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","Container","maxWidth","Paper","document","getElementById","module","exports"],"mappings":"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","file":"static/js/main.9ddb6409.chunk.js","sourcesContent":["import React, {ChangeEvent, useState} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport style from '../App.module.css'\r\nimport {Button} from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const OTPForm = () => {\r\n    const [code, setCode] = useState('')\r\n    const [isClick, setIsClick] = useState(false)\r\n    const [error, setError] = useState<string | null>(\"\")\r\n    console.log('OTPFORM')\r\n    const onChangeCode = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setCode(e.currentTarget.value)\r\n    }\r\n    const onClickHandler = () => {\r\n        if (code === \"12345\") {\r\n            setIsClick(true)\r\n        } else {\r\n            setError(\"Incorrect code\")\r\n        }\r\n    }\r\n    if (isClick) {\r\n        return <Redirect to=\"/MainPage\"/>\r\n    }\r\n    return <div className={style.firstPage}>\r\n        <div className={style.input}>\r\n            <TextField onChange={onChangeCode}\r\n                       error={!!error}\r\n                       id=\"outlined-error-helper-text\"\r\n                       helperText={error}\r\n                       value={code}\r\n                       label=\"Code from SMS\"\r\n                       variant=\"outlined\"/>\r\n        </div>\r\n        <div>\r\n            <Button onClick={onClickHandler} variant=\"contained\" endIcon={<SendIcon/>}>\r\n                Send\r\n            </Button>\r\n        </div>\r\n    </div>\r\n}","import React from \"react\";\r\nimport {AppBar, Button, Toolbar, Typography} from \"@mui/material\";\r\nimport {useHistory} from \"react-router-dom\";\r\n\r\ntype PropsType = {\r\n    isBack?: boolean\r\n}\r\n\r\nexport const Header: React.FC<PropsType> = ({isBack}) => {\r\n\r\n    let history = useHistory()\r\n    const back = () => history.push(\"/MainPage\");\r\n    const logout = () => history.push(\"/\");\r\n\r\n\r\n    return <AppBar position=\"static\">\r\n        <Toolbar>\r\n            {isBack && <Button onClick={back} color=\"inherit\">Back</Button>}\r\n            <Typography variant=\"h6\" component=\"div\" sx={{flexGrow: 1}}/>\r\n            <Button onClick={logout} color=\"inherit\">Logout</Button>\r\n        </Toolbar>\r\n    </AppBar>\r\n}","import React from \"react\";\r\nimport FormControl from \"@mui/material/FormControl\";\r\nimport InputLabel from \"@mui/material/InputLabel\";\r\nimport MenuItem from \"@mui/material/MenuItem\";\r\nimport Select, {SelectChangeEvent} from '@mui/material/Select';\r\n\r\n\r\ntype SelectPropsType = {\r\n    value:string\r\n    label:string\r\n    callback:(event: SelectChangeEvent)=>void\r\n    types:Array<string>\r\n}\r\n\r\n\r\nexport const SelectElement = (props:SelectPropsType) => {\r\n    return  <FormControl sx={{m: 1, minWidth: 120}}>\r\n        <InputLabel id=\"demo-simple-select-helper-label\">Types</InputLabel>\r\n        <Select\r\n            labelId=\"demo-simple-select-helper-label\"\r\n            id=\"demo-simple-select-helper\"\r\n            value={props.value}\r\n            label={props.label}\r\n            onChange={props.callback}>\r\n            <MenuItem value=\"\">\r\n                <em>None</em>\r\n            </MenuItem>\r\n            {props.types.map(el => {\r\n                return (\r\n                    <MenuItem value={el}>{el}</MenuItem>\r\n                )\r\n            })}\r\n        </Select>\r\n    </FormControl>\r\n}","import * as React from 'react';\r\nimport {Dispatch, SetStateAction, useEffect} from 'react';\r\nimport {SelectChangeEvent} from '@mui/material/Select';\r\nimport style from \"../App.module.css\";\r\nimport axios from \"axios\";\r\nimport {ResponseType} from \"./MainPage\";\r\nimport {SelectElement} from './Routes/SelectElement';\r\n\r\ntype SelectPropsType = {\r\n    setNewPokemonData: Dispatch<SetStateAction<ResponseType[]>>\r\n    newPokemonData: ResponseType[]\r\n    currentSubType: string\r\n    currentType: string\r\n    setCurrentSubType: Dispatch<SetStateAction<string>>\r\n    setCurrentType: Dispatch<SetStateAction<string>>\r\n    setTotalItemsCount: Dispatch<SetStateAction<number>>\r\n    setPageSize: Dispatch<SetStateAction<number>>\r\n    setCurrentPage: Dispatch<SetStateAction<number>>\r\n    currentPage: number\r\n}\r\nexport const SelectForm = (props: SelectPropsType) => {\r\n    const [types, setTypes] = React.useState<string[]>([]);\r\n    const [subTypes, setSubTypes] = React.useState<string[]>([]);\r\n\r\n    const instance = axios.create({\r\n        baseURL: 'https://api.pokemontcg.io/v2/',\r\n        headers: {\r\n            'X-Api-Key': '0ffac3b1-152b-46c3-9df9-b8e6a7685699'\r\n        }\r\n    })\r\n\r\n    const handleChangeType = (event: SelectChangeEvent) => {\r\n        props.setCurrentType(event.target.value);\r\n        localStorage.setItem(\"currentType\", JSON.stringify(event.target.value))\r\n    };\r\n    const handleChangeSubType = (event: SelectChangeEvent) => {\r\n        props.setCurrentSubType(event.target.value);\r\n        localStorage.setItem(\"currentSubType\", JSON.stringify(event.target.value))\r\n    };\r\n\r\n    useEffect(() => {\r\n        instance.get(`cards?q=${props.currentType && 'types:' + props.currentType}${props.currentSubType && ' subtypes:' + props.currentSubType}&page=${props.currentPage}&pageSize=6`)\r\n            .then(res => {\r\n                props.setNewPokemonData(res.data.data)\r\n                props.setTotalItemsCount(res.data.totalCount)\r\n                props.setPageSize(res.data.pageSize)\r\n            }).catch(err => console.log(err))\r\n    }, [props.currentType, props.currentSubType, props.currentPage])\r\n\r\n    useEffect(() => {\r\n        instance.get(\"types\")\r\n            .then(res => {\r\n                setTypes(res.data.data)\r\n            })\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        instance.get(\"subtypes\")\r\n            .then(res => {\r\n                setSubTypes(res.data.data)\r\n            })\r\n    }, [])\r\n\r\n\r\n    return (\r\n        <div className={style.select}>\r\n            <SelectElement\r\n                value={props.currentType}\r\n                label={\"Types\"}\r\n                types={types}\r\n                callback={handleChangeType}\r\n            />\r\n            <div>\r\n                <SelectElement\r\n                    value={props.currentSubType}\r\n                    label={\"SubTypes\"}\r\n                    types={subTypes}\r\n                    callback={handleChangeSubType}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, {Dispatch, SetStateAction} from \"react\";\r\nimport {Pagination} from \"@mui/material\";\r\nimport style from \"../App.module.css\"\r\n\r\ntype PaginationPagePropsType = {\r\n    pageSize: number\r\n    totalItemsCount: number\r\n    currentPage: number\r\n    setCurrentPage:Dispatch<SetStateAction<number>>\r\n}\r\nexport const PaginationPage = (props: PaginationPagePropsType) => {\r\n\r\n    const handleChange = (event:React.ChangeEvent<unknown>, value:number) => {\r\n        props.setCurrentPage(value);\r\n        localStorage.setItem(\"currentPage\", JSON.stringify(value))\r\n    };\r\n\r\n    let pagesCount = Math.ceil(props.totalItemsCount / props.pageSize);\r\n\r\n    return <div className={style.pagination}>\r\n        <Pagination color=\"primary\" onChange={handleChange} page={props.currentPage} count={pagesCount} variant=\"outlined\" shape=\"rounded\"/>\r\n    </div>\r\n}","import React, {Dispatch, SetStateAction} from \"react\";\r\nimport style from \"../App.module.css\"\r\nimport {Header} from \"./Header\";\r\nimport {SelectForm} from \"./Select\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {PaginationPage} from \"./Pagination\";\r\n\r\ntype AttacksType = {\r\n    cost: string[]\r\n    damage: string\r\n    text: string\r\n    name: string\r\n    id: string\r\n}\r\ntype WeaknessesType = {\r\n    type: string[]\r\n    value: string\r\n    id: string\r\n}\r\ntype AbilitiesType = {\r\n    name: string\r\n    text: string\r\n    id: string\r\n}\r\ntype ImagesType = {\r\n    small: string\r\n    large: string\r\n}\r\nexport type ResponseType = {\r\n    types: string[]\r\n    subtypes: string\r\n    id: string\r\n    name: string\r\n    artist: string\r\n    images: ImagesType\r\n    attacks?: AttacksType[]\r\n    supertype: string\r\n    weaknesses?: WeaknessesType[]\r\n    hp: number\r\n    abilities?: AbilitiesType[]\r\n}\r\ntype MainPagePropsType = {\r\n    setNewPokemonData: Dispatch<SetStateAction<ResponseType[]>>\r\n    newPokemonData: ResponseType[]\r\n    currentSubType: string\r\n    currentType: string\r\n    setCurrentSubType: Dispatch<SetStateAction<string>>\r\n    setCurrentType: Dispatch<SetStateAction<string>>\r\n    totalItemsCount: number\r\n    setTotalItemsCount: Dispatch<SetStateAction<number>>\r\n    setPageSize: Dispatch<SetStateAction<number>>\r\n    pageSize: number\r\n    currentPage: number\r\n    setCurrentPage: Dispatch<SetStateAction<number>>\r\n}\r\nexport const MainPage = (props: MainPagePropsType) => {\r\n\r\n    return <div>\r\n        <Header/>\r\n        <span className={style.mainPage}>\r\n            <span>\r\n                <SelectForm\r\n                    currentPage={props.currentPage}\r\n                    setCurrentPage={props.setCurrentPage}\r\n                    setPageSize={props.setPageSize}\r\n                    setTotalItemsCount={props.setTotalItemsCount}\r\n                    currentSubType={props.currentSubType}\r\n                    currentType={props.currentType}\r\n                    setCurrentSubType={props.setCurrentSubType}\r\n                    setCurrentType={props.setCurrentType}\r\n                    newPokemonData={props.newPokemonData}\r\n                    setNewPokemonData={props.setNewPokemonData}/>\r\n                </span>\r\n            <div className={style.viewer}>\r\n                {props.newPokemonData.map(el => {\r\n                    return <div className={style.viewItem} key={el.id}>\r\n                        <NavLink className={style.navLink} to={{pathname: `/pokemon/${el.id}`}}>\r\n                            <img src={el.images.small} className={style.img} alt=\"avatar\"/>\r\n                            <div>{el.name}</div>\r\n                            <div>{el.artist}</div>\r\n                        </NavLink>\r\n                    </div>\r\n                })}\r\n                </div>\r\n        </span>\r\n        <PaginationPage currentPage={props.currentPage}\r\n                        setCurrentPage={props.setCurrentPage}\r\n                        pageSize={props.pageSize}\r\n                        totalItemsCount={props.totalItemsCount}/>\r\n    </div>\r\n}","import React, {ChangeEvent, useState} from \"react\";\r\nimport {TextField} from \"@material-ui/core\";\r\nimport style from '../App.module.css'\r\nimport {Button} from \"@mui/material\";\r\nimport SendIcon from '@mui/icons-material/Send';\r\nimport {Redirect} from \"react-router-dom\";\r\n\r\nexport const AuthorizationForm = () => {\r\n\r\n    const [login, setLogin] = useState(\"\")\r\n    const [password, setPassword] = useState(\"\")\r\n    const [isClick, setIsClick] = useState(false)\r\n    const [error, setError] = useState<string | null>(\"\")\r\n\r\n    const onChangeLogin = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setLogin(e.currentTarget.value)\r\n        setError(null)\r\n    }\r\n    const onChangePassword = (e: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(e.currentTarget.value)\r\n        setError(null)\r\n    }\r\n\r\n    const onClickSend = () => {\r\n        if (login === \"kode@kode.ru\" && password === \"Enk0deng\") {\r\n            setIsClick(true)\r\n        } else {\r\n            setError(\"Invalid data\")\r\n        }\r\n    }\r\n\r\n    if (isClick) {\r\n        return <Redirect to=\"/OTPForm\"/>\r\n    }\r\n\r\n    return <div className={style.firstPage}>\r\n        <div>\r\n            <TextField value={login}\r\n                       onChange={onChangeLogin}\r\n                       error={!!error}\r\n                       id=\"outlined-error-helper-text\"\r\n                       helperText={error}\r\n                       label=\"Login\"\r\n                       variant=\"outlined\"/>\r\n        </div>\r\n        <div className={style.input}>\r\n            <TextField value={password}\r\n                       onChange={onChangePassword}\r\n                       error={!!error}\r\n                       id=\"outlined-error-helper-text\"\r\n                       helperText={error}\r\n                       label=\"Password\"\r\n                       variant=\"outlined\"/>\r\n        </div>\r\n        <div>\r\n            <Button onClick={onClickSend} variant=\"contained\" endIcon={<SendIcon/>}>\r\n                Send\r\n            </Button>\r\n        </div>\r\n    </div>\r\n}","import React, {useEffect, useState} from \"react\";\r\nimport {useParams} from \"react-router-dom\";\r\nimport style from \"../App.module.css\"\r\nimport {Header} from \"./Header\";\r\nimport {ResponseType} from \"./MainPage\";\r\nimport axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.pokemontcg.io/v2/',\r\n    headers: {\r\n        'X-Api-Key': '0ffac3b1-152b-46c3-9df9-b8e6a7685699'\r\n    }\r\n})\r\n\r\nexport const PresentationalForm = () => {\r\n    const [data, setData] = useState<ResponseType>()\r\n    let params = useParams<{ id: string }>()\r\n\r\n    useEffect(() => {\r\n        instance.get(`cards/${params.id}`)\r\n            .then(res => {\r\n                setData(res.data.data)\r\n            })\r\n    }, [data])\r\n\r\n    return <div className={style.viewField}>\r\n        <Header isBack={true}/>\r\n        <div className={style.window}>\r\n            <img src={data && data.images.large} className={style.largeImg} alt=\"avatar\"/>\r\n            <div className={style.personalData}>\r\n                <div><b>Pokemon name: </b>{data && data.name}</div>\r\n                <div><b>Supertype: </b>{data && data.supertype}</div>\r\n                <div><b>Types: </b>{data && data.types}</div>\r\n                <div><b>SubTypes: </b>{data && data.subtypes}</div>\r\n                <div>------------------------</div>\r\n                {data && data.attacks?.map(el => {\r\n                    return <div key={el.id}>\r\n                        <div><b>Attack:</b></div>\r\n                        <div>name: {el.name}</div>\r\n                        <div>damage: {el.damage === \"\" ? 0 : el.damage}</div>\r\n                        <div>cost: {el.cost}</div>\r\n                    </div>\r\n                })}\r\n                <div>------------------------</div>\r\n                {data && data.weaknesses &&\r\n                <div><b>Weaknesses:</b>{data.weaknesses?.map(el => {\r\n                    return <div key={el.id}>\r\n                        <div>type: {el.type}</div>\r\n                        <div>value: {el.value}</div>\r\n                    </div>\r\n                })}</div>}\r\n                <br/>\r\n                <div><b>HP </b>:{data && data.hp}</div>\r\n            </div>\r\n        </div>\r\n        {data && data.abilities &&\r\n        <div className={style.description}>\r\n            <b>Abilities:</b>\r\n            {data.abilities.map(el => {\r\n                return <div key={el.id}><b>{el.name}</b>: {el.text}</div>\r\n            })}\r\n        </div>}\r\n        {data && data.attacks &&\r\n        <div className={style.description}>\r\n            <b>Attacks description:</b>\r\n            {data.attacks.map(el => {\r\n                return <div key={el.id}><b>{el.name}</b>: {el.text}</div>\r\n            })}\r\n        </div>}\r\n    </div>\r\n}\r\n","import React, {useEffect, useState} from \"react\";\r\nimport {Route, Switch} from \"react-router-dom\";\r\nimport {OTPForm} from \"../OTPForm\";\r\nimport {MainPage, ResponseType} from \"../MainPage\";\r\nimport {AuthorizationForm} from \"../AuthorizationForm\";\r\nimport {PresentationalForm} from \"../PresentationalForm\";\r\n\r\nexport const Routes = () => {\r\n    const [newPokemonData, setNewPokemonData] = React.useState<ResponseType[]>([]);\r\n    const [currentType, setCurrentType] = React.useState('');\r\n    const [currentSubType, setCurrentSubType] = React.useState('');\r\n    const [totalItemsCount, setTotalItemsCount] = useState(0)\r\n    const [pageSize, setPageSize] = useState(6)\r\n    const [currentPage, setCurrentPage] = useState(1)\r\n\r\n    useEffect(() => {\r\n        let currentType = localStorage.getItem(\"currentType\")\r\n        let currentSubType = localStorage.getItem(\"currentSubType\")\r\n        let currentPage = localStorage.getItem(\"currentPage\")\r\n        if (currentType) {\r\n            let valueType = JSON.parse(currentType)\r\n            setCurrentType(valueType)\r\n        }\r\n        if (currentSubType) {\r\n            let subValueType = JSON.parse(currentSubType)\r\n            setCurrentSubType(subValueType)\r\n        }\r\n        if (currentPage) {\r\n            let currentPageValue = JSON.parse(currentPage)\r\n            setCurrentPage(currentPageValue)\r\n        }\r\n    }, [])\r\n\r\n//Сделать EnamNotations\r\n    return <div>\r\n        <Switch>\r\n            <Route exact path=\"/\"><AuthorizationForm/></Route>\r\n            <Route exact path=\"/OTPForm\"><OTPForm/></Route>\r\n            <Route path={`/pokemon/:id`}><PresentationalForm/></Route>\r\n            <Route exact path=\"/MainPage\">\r\n                <MainPage\r\n                    currentPage={currentPage}\r\n                    setCurrentPage={setCurrentPage}\r\n                    pageSize={pageSize}\r\n                    setPageSize={setPageSize}\r\n                    totalItemsCount={totalItemsCount}\r\n                    setTotalItemsCount={setTotalItemsCount}\r\n                    currentType={currentType}\r\n                    currentSubType={currentSubType}\r\n                    setCurrentType={setCurrentType}\r\n                    setCurrentSubType={setCurrentSubType}\r\n                    setNewPokemonData={setNewPokemonData}\r\n                    newPokemonData={newPokemonData}/>\r\n            </Route>\r\n        </Switch>\r\n\r\n    </div>\r\n}","import React from 'react';\nimport './App.css';\nimport style from \"./App.module.css\"\nimport {Routes} from './components/Routes/Routes';\n\nfunction App() {\n    return (\n        <div className={style.main}>\n            <Routes/>\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {HashRouter} from \"react-router-dom\";\nimport {Container, Paper} from \"@mui/material\";\n\nReactDOM.render(\n    <HashRouter>\n        <Container maxWidth=\"sm\">\n            <Paper><App/></Paper>\n        </Container>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"App_main__14l1y\",\"firstPage\":\"App_firstPage__3assr\",\"window\":\"App_window__2l5-l\",\"input\":\"App_input__1M9Z6\",\"select\":\"App_select__dU-7r\",\"mainPage\":\"App_mainPage__1zhfH\",\"viewField\":\"App_viewField__3rs5z\",\"viewMode\":\"App_viewMode__20mPi\",\"box\":\"App_box__2aQPd\",\"personalData\":\"App_personalData__13qDP\",\"description\":\"App_description__2HZdl\",\"viewItem\":\"App_viewItem__3suWJ\",\"img\":\"App_img__2aUDz\",\"largeImg\":\"App_largeImg__QmhLV\",\"viewer\":\"App_viewer__i20OZ\",\"pagination\":\"App_pagination__3FoaO\",\"navLink\":\"App_navLink__1FL3h\"};"],"sourceRoot":""}